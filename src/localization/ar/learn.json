{
  "examples.starter.title": "تدريب",
  "examples.starter.description": "الآن حان الوقت للقيام ببعض التدريب لتثبيت ما تعلمناه.",

  "examples.finish.title": "اكتمل التدريب!",
  "examples.finish.description": " ",

  "steps.starter.title": "المقدمة",
  "steps.starter.description": "التعبيرات النمطية هي اختصار لـ `Regular Expression`. تساعد في مطابقة النص أو العثور عليه أو إدارته. ابدأ بكتابة `OK` في حقل التعبيرات النمطية للانتقال إلى الخطوة الأولى والوصول إلى الوصف الأكثر تفصيلاً.",

  "steps.whatIsRegex.title": "ما هي التعبيرات النمطية `Regex`؟",
  "steps.whatIsRegex.description": "التعبيرات النمطية هي سلسلة من الأحرف التي تعبر عن نمط بحث. غالبًا ما يتم اختصارها بـ `Regex` أو `Regexp`. تُستخدم بشكل خاص للعثور على الكلمات أو استبدالها في النصوص. بالإضافة إلى ذلك، يمكننا اختبار ما إذا كان النص يتوافق مع القواعد التي نضعها.\\n\\n على سبيل المثال، لنفترض أن لديك قائمة بأسماء الملفات. وتريد فقط العثور على الملفات ذات الامتداد `pdf`. بعد كتابة تعبير `^\\w+\\.pdf$` سيعمل. ستصبح معاني التعريفات في هذا التعبير أكثر وضوحًا مع تقدم الخطوات.",

  "steps.basicMatchers.title": "المطابقات الأساسية",
  "steps.basicMatchers.description": "الحرف أو الكلمة التي نريد العثور عليها تُكتب مباشرة. إنها مشابهة لعملية البحث العادية. على سبيل المثال، للعثور على كلمة `curious` في النص، اكتب نفس الكلمة.",

  "steps.dotCharacter.title": "النقطة `.`: أي حرف",
  "steps.dotCharacter.description": "تسمح النقطة `.` بتحديد أي حرف، بما في ذلك الأحرف الخاصة والمسافات. اكتب نقطة `.` في حقل التعبيرات النمطية للمتابعة.",

  "steps.characterSet.title": "مجموعات الأحرف `[abc]`",
  "steps.characterSet.description": "إذا كان أحد الأحرف في كلمة يمكن أن يكون أحرفًا مختلفة، نكتبه في أقواس مربعة `[]` مع جميع الأحرف البديلة. على سبيل المثال، لكتابة تعبير يمكنه العثور على جميع الكلمات في النص، اكتب الأحرف `a`، `e`، `i`، `o`، `u` بشكل متجاور داخل الأقواس المربعة `[]`.",

  "steps.negatedCharacterSet.title": "مجموعات الأحرف المنفية `[^abc]`",
  "steps.negatedCharacterSet.description": "للعثور على جميع الكلمات في النص أدناه، باستثناء `ber` و `bor`، اكتب `e` و `o` جنبًا إلى جنب بعد علامة `^` داخل الأقواس المربعة `[]`.",

  "steps.range.title": "نطاق الأحرف `[a-z]`",
  "steps.range.description": "للعثور على الأحرف في النطاق المحدد، نكتب الحرف الأول والحرف الأخير في أقواس مربعة `[]` مع شرطة بينهما `-`. إنها حساسة لحالة الأحرف. اكتب التعبير الذي سيحدد جميع الأحرف الصغيرة بين `e` و `o`، بما في ذلك أنفسهم.",

  "steps.rangeNumber.title": "نطاق الأرقام `[0-9]`",
  "steps.rangeNumber.description": "للعثور على الأرقام في النطاق المحدد، نكتب الرقم الأول والرقم الأخير في أقواس مربعة `[]` مع شرطة بينهما `-`. اكتب تعبيرًا يحدد جميع الأرقام بين `3` و `6`، بما في ذلك أنفسهم.",

  "examples.basicMatchers.title": "تدريب: المطابقة الأساسية",
  "examples.basicMatchers.description": "اكتب التعبير الذي سيحدد كلمات `of` في النص.",

  "examples.dotCharacter.title": "تدريب: أي حرف",
  "examples.dotCharacter.description": "اكتب التعبير الذي يحدد الأحرف الفردية والأرقام والمسافات والأحرف الخاصة في النص. يجب أن يتطابق التعبير الذي تكتبه مع أي حرف.",

  "examples.characterSet.title": "تدريب: مجموعات الأحرف",
  "examples.characterSet.description": "اكتب العبارة التي تطابق كل كلمة في النص. الأحرف الوحيدة التي تتغير هي الأحرف الأولى من الكلمات.",

  "examples.negatedCharacterSet.title": "تدريب: مجموعات الأحرف المنفية",
  "examples.negatedCharacterSet.description": "اكتب التعبير الذي سيطابق أي شيء بخلاف الكلمات `beor` و `beur` في النص. قم بذلك باستخدام مجموعة الأحرف المنفية.",

  "examples.range.title": "تدريب: نطاق الأحرف",
  "examples.range.description": "اكتب التعبير الذي سيحدد الأحرف من `g` إلى `k` في النص.\\n يجب تضمين الأحرف `g` و `k` في هذا النطاق أيضًا.",

  "examples.rangeNumber.title": "تدريب: نطاق الأرقام",
  "examples.rangeNumber.description": "اكتب تعبيرًا لتحديد الأرقام من `2` إلى `7` في النص.\\n يجب تضمين الأرقام `2` و `7` في هذا النطاق أيضًا.",

  "steps.repetitions.title": "التكرارات",
  "steps.repetitions.description": "تُستخدم بعض الأحرف الخاصة لتحديد عدد مرات تكرار الحرف في النص. هذه الأحرف الخاصة هي علامة الزائد `+`، وعلامة النجمة `*`، وعلامة السؤال `?`.",

  "steps.asterisk.title": "علامة النجمة `*`",
  "steps.asterisk.description": "نضع علامة النجمة `*` بعد حرف للإشارة إلى أن الحرف قد لا يتطابق على الإطلاق أو يمكن أن يتطابق عدة مرات. على سبيل المثال، حدد أن الحرف `e` يجب ألا يظهر في النص، أو يمكن أن يظهر مرة أو أكثر جنبًا إلى جنب.",

  "steps.plusCharacter.title": "علامة الزائد `+`",
  "steps.plusCharacter.description": "لتحديد أن حرفًا يمكن أن يظهر مرة أو أكثر، نضع علامة الزائد `+` بعد الحرف. على سبيل المثال، حدد أن الحرف `e` يمكن أن يظهر مرة أو أكثر في النص.",

  "steps.questionMark.title": "علامة السؤال `?`",
  "steps.questionMark.description": "لتحديد أن حرفًا اختياري، نضع علامة السؤال `?` بعد الحرف. على سبيل المثال، حدد أن الحرف التالي `u` اختياري.",

  "steps.quantifier.title": "الأقواس المعقوفة - 1",
  "steps.quantifier.description": "للتعبير عن عدد معين من مرات تكرار الحرف، نكتب الأقواس المعقوفة `{n}` مع عدد المرات التي نريد أن يظهر فيها في النهاية. على سبيل المثال، حدد أن الحرف التالي `e` يمكن أن يظهر مرتين فقط على التوالي.",

  "steps.quantifierMin.title": "الأقواس المعقوفة - 2",
  "steps.quantifierMin.description": "للتعبير عن ظهور حرف معين على الأقل، نكتب فورًا بعد الحرف عدد المرات التي نريد أن يظهر فيها على التوالي متبوعًا بفاصلة `,` وملفوفًا داخل الأقواس المعقوفة `{n,}`. على سبيل المثال، حدد أن الحرف التالي `e` يمكن أن يظهر ثلاث مرات على الأقل على التوالي.",

  "steps.quantifierRange.title": "الأقواس المعقوفة - 3",
  "steps.quantifierRange.description": "للتعبير عن ظهور حرف في نطاق عدد معين، نكتب الأقواس المعقوفة `{x,y}` للفاصل الشامل. على سبيل المثال، حدد أن الحرف التالي `e` يمكن أن يظهر بين مرة وثلاث مرات على التوالي.",

  "examples.asterisk.title": "تدريب: علامة النجمة `*`",
  "examples.asterisk.description": "استخدم علامة النجمة `*` لكتابة التعبير الذي سيحدد كل كلمة، مناسب لعدم وجود الحرف `e` في النص ووجوده مرة أو أكثر.",

  "examples.plusCharacter.title": "تدريب: علامة الزائد `+`",
  "examples.plusCharacter.description": "اكتب التعبير باستخدام علامة الزائد `+` لتحديد الكلمات التي يظهر فيها الحرف `e` مرة أو أكثر في النص.",

  "examples.questionMark.title": "تدريب: علامة السؤال `?`",
  "examples.questionMark.description": "اكتب التعبير الذي يشير إلى أن الحرف `n` اختياري في النص، باستخدام علامة السؤال `?`. وبالتالي، يمكن تحديد كل من الكلمات `a` و `an`.",

  "examples.quantifier.title": "تدريب: الأقواس المعقوفة - 1",
  "examples.quantifier.description": "اكتب التعبير باستخدام الأقواس المعقوفة `{}` الذي سيجد النصوص التي تحتوي على `4` أرقام جنبًا إلى جنب. تذكر أن النطاق `[0-9]` سيطابق رقمًا واحدًا.",

  "examples.quantifierMin.title": "تدريب: الأقواس المعقوفة - 2",
  "examples.quantifierMin.description": "اكتب التعبير باستخدام الأقواس المعقوفة `{}` الذي سيجد النصوص التي تحتوي على رقمين على الأقل جنبًا إلى جنب.",

  "examples.quantifierRange.title": "تدريب: الأقواس المعقوفة - 3",
  "examples.quantifierRange.description": "اكتب التعبير باستخدام الأقواس المعقوفة `{}` الذي سيجد النصوص التي تحتوي على رقم واحد على الأقل وأربعة أرقام كحد أقصى جنبًا إلى جنب.",

  "steps.grouping.title": "الأقواس `( )`: التجميع",
  "steps.grouping.description": "يمكننا تجميع تعبير واستخدام هذه المجموعات للإشارة أو فرض بعض القواعد. لتجميع تعبير، نضعه بين الأقواس `()`. في الوقت الحالي فقط قم بتجميع `haa` أدناه.",

  "steps.groupReference.title": "الإشارة إلى مجموعة",
  "steps.groupReference.description": "الكلمات `ha` و `haa` مجمعة أدناه. يتم استخدام المجموعة الأولى عن طريق كتابة `\\1` لتجنب إعادة الكتابة. هنا يشير الرقم `1` إلى ترتيب التجميع. اكتب `\\2` في نهاية التعبير للإشارة إلى المجموعة الثانية.",

  "steps.nonCapturingGrouping.title": "الأقواس `(?: )`: التجميع غير الملتقط",
  "steps.nonCapturingGrouping.description": "يمكنك تجميع تعبير والتأكد من عدم التقاطه بواسطة الإشارات. على سبيل المثال، أدناه مجموعتان. ومع ذلك، فإن الإشارة إلى المجموعة الأولى التي نحددها بـ `\\1` تشير في الواقع إلى المجموعة الثانية، حيث أن المجموعة الأولى غير ملتقطة.",

  "steps.pipeCharacter.title": "علامة الأنبوب `|`",
  "steps.pipeCharacter.description": "يسمح بتحديد أن تعبيرًا يمكن أن يكون في تعبيرات مختلفة. وهكذا، تُكتب جميع العبارات الممكنة مفصولة بعلامة الأنبوب `|`. يختلف هذا عن مجموعة الأحرف `[abc]`، حيث تعمل مجموعات الأحرف على مستوى الحرف. تكون البدائل على مستوى التعبير. على سبيل المثال، سيتم تحديد كل من `cat` و `rat`. أضف علامة أنبوب أخرى `|` إلى نهاية التعبير واكتب `dog` بحيث يتم تحديد جميع الكلمات.",

  "steps.escapeCharacter.title": "حرف الهروب `\\`",
  "steps.escapeCharacter.description": "هناك أحرف خاصة نستخدمها عند كتابة التعبيرات النمطية. `{ } [ ] / \\ + * . $^ | ?` قبل أن نتمكن من تحديد هذه الأحرف نفسها، نحتاج إلى استخدام حرف الهروب `\\`. على سبيل المثال، لتحديد الأحرف النقطة `.` والنجمة `*` في النص، أضف حرف الهروب `\\` قبلها.",

  "steps.caret.title": "علامة `^`:\\nالتحديد ببداية السطر",
  "steps.caret.description": "كنا نستخدم `[0-9]` للعثور على الأرقام. للعثور على الأرقام في بداية السطر فقط، قم بكتابة علامة `^` قبل هذا التعبير.",

  "steps.dollar.title": "علامة الدولار `$`:\\nالتحديد بنهاية السطر",
  "steps.dollar.description": "دعنا نستخدم علامة `$` بعد قيمة `html` للعثور على النصوص `html` فقط في نهاية السطر.",

  "steps.wordCharacter.title": "حرف الكلمة `\\w`: الحرف، الرقم والشرطة السفلية",
  "steps.wordCharacter.description": "يُستخدم التعبير `\\w` للعثور على الأحرف والكلمات والشرطة السفلية. دعنا نستخدم التعبير `\\w` للعثور على أحرف الكلمة في النص.",

  "steps.withoutWordCharacter.title": "باستثناء حرف الكلمة `\\W`",
  "steps.withoutWordCharacter.description": "يُستخدم التعبير `\\W` للعثور على الأحرف غير الأحرف والكلمات والشرطة السفلية.",

  "steps.numberCharacter.title": "حرف الرقم `\\d`",
  "steps.numberCharacter.description": "`\\d` يُستخدم للعثور على أحرف الأرقام فقط.",

  "steps.withoutNumberCharacter.title": "باستثناء حرف الرقم `\\D`",
  "steps.withoutNumberCharacter.description": "`\\D` يُستخدم للعثور على الأحرف غير الرقمية.",

  "steps.spaceCharacter.title": "حرف المسافة `\\s`",
  "steps.spaceCharacter.description": "`\\s` يُستخدم للعثور على أحرف المسافة فقط.",

  "steps.withoutSpaceCharacter.title": "باستثناء حرف المسافة `\\S`",
  "steps.withoutSpaceCharacter.description": "`\\S` يُستخدم للعثور على الأحرف غير المسافات.",

  "steps.lookarounds.title": "التحقق من السياق",
  "steps.lookarounds.description": "إذا كنا نريد أن تأتي العبارة التي نكتبها قبل أو بعد عبارة أخرى، فنحن بحاجة إلى \"التحقق من السياق\". اتخذ الخطوة التالية لتعلم كيفية \"التحقق من السياق\".",

  "steps.positiveLookahead.title": "التحقق من السياق الإيجابي: `(?=)`",
  "steps.positiveLookahead.description": "على سبيل المثال، نريد تحديد قيمة الساعة في النص. لذلك، لتحديد القيم العددية التي تحتوي على `PM` بعدها فقط، نحتاج إلى كتابة تعبير التحقق من السياق الإيجابي `(?=)` بعد تعبيرنا. تضمين `PM` بعد علامة `=` داخل الأقواس.",

  "steps.negativeLookahead.title": "التحقق من السياق السلبي: `(?!)`",
  "steps.negativeLookahead.description": "على سبيل المثال، نريد تحديد الأرقام بخلاف قيمة الساعة في النص. لذلك، نحتاج إلى كتابة تعبير التحقق من السياق السلبي `(?!)` بعد تعبيرنا لتحديد القيم العددية التي لا تحتوي على `PM` بعدها فقط. تضمين `PM` بعد علامة `!` داخل الأقواس.",

  "steps.positiveLookbehind.title": "التحقق من السياق الإيجابي من الخلف: `(?<=)`",
  "steps.positiveLookbehind.description": "على سبيل المثال، نريد تحديد قيمة السعر في النص. لذلك، لتحديد القيم العددية التي تسبقها `$` فقط، نحتاج إلى كتابة تعبير التحقق من السياق الإيجابي من الخلف `(?<=)` قبل تعبيرنا. أضف `\\$` بعد علامة `=` داخل الأقواس.",

  "steps.negativeLookbehind.title": "التحقق من السياق السلبي من الخلف: `(?&lt;!)`",
  "steps.negativeLookbehind.description": "على سبيل المثال، نريد تحديد الأرقام في النص بخلاف قيمة السعر. لذلك، لتحديد القيم العددية التي لا تسبقها `$` فقط، نحتاج إلى كتابة تعبير التحقق من السياق السلبي من الخلف `(?&lt;!)` قبل تعبيرنا. أضف `\\$` بعد علامة `!` داخل الأقواس.",

  "steps.flags.title": "العلامات",
  "steps.flags.description": "تغير العلامات مخرجات التعبير. لهذا السبب تُسمى العلامات أيضًا بـ `المعدلات`. تحدد العلامات ما إذا كان التعبير المكتوب يعامل النص كخطوط منفصلة، أو يكون حساسًا لحالة الأحرف، أو يجد جميع المطابقات. تابع إلى الخطوة التالية لتعلم العلامات.",

  "steps.flagsGlobal.title": "علامة العالمية",
  "steps.flagsGlobal.description": "تتسبب علامة `global` في تحديد التعبير لجميع المطابقات. إذا لم تُستخدم، فستحدد المطابقة الأولى فقط. الآن قم بتمكين علامة `global` لتتمكن من تحديد جميع المطابقات.",

  "steps.flagsMultiline.title": "علامة متعددة الأسطر",
  "steps.flagsMultiline.description": "ترى التعبيرات النمطية جميع النص كسطر واحد. ولكننا نستخدم علامة `multiline` للتعامل مع كل سطر بشكل منفصل. بهذه الطريقة، تعمل التعبيرات التي نكتبها لتحديد الأنماط في نهاية السطور بشكل منفصل لكل سطر. الآن قم بتمكين علامة `multiline` للعثور على جميع المطابقات.",

  "steps.flagsCaseInsensitive.title": "علامة عدم حساسية الحالة",
  "steps.flagsCaseInsensitive.description": "لإزالة حساسية حالة التعبير الذي كتبناه، يجب تفعيل علامة `case-insensitive`.",

  "steps.greedyMatching.title": "المطابقة الجشعة",
  "steps.greedyMatching.description": "تقوم التعبيرات النمطية بالمطابقة الجشعة بشكل افتراضي. هذا يعني أن المطابقة ستكون طويلة قدر الإمكان. تحقق من المثال أدناه. يشير إلى أي مطابقة تنتهي بـ `r` ويمكن أن تكون أي حرف يسبقها. لكنه لا يتوقف عند الحرف الأول `r`.",

  "steps.lazyMatching.title": "المطابقة الكسولة",
  "steps.lazyMatching.description": "تتوقف المطابقة الكسولة، على عكس المطابقة الجشعة، عند المطابقة الأولى. على سبيل المثال، في المثال أدناه، أضف `?` بعد `*` للعثور على المطابقة الأولى التي تنتهي بالحرف `r` ويسبقها أي حرف. يعني ذلك أن هذه المطابقة ستتوقف عند الحرف الأول `r`.",

  "steps.completeAllSteps.title": "تهانينا، لقد أكملت جميع الخطوات!",
  "steps.completeAllSteps.description": "يمكنك العودة إلى الخطوات السابقة متى شئت، ويمكنك التنقل بسهولة بين جميع الخطوات التي اجتزتها."
}
